{"version":3,"sources":["constants.js","Login.js","Sites.js","PrisingA.js","Routes.js","index.js"],"names":["USER_ID","loginMutation","gql","Login","state","input","identifier","password","_confirm","data","a","login","jwt","user","_saveUserData","props","history","push","token","username","localStorage","setItem","id","handleChange","e","target","name","value","setState","this","mutation","variables","onCompleted","onError","alert","mutate","className","type","placeholder","onChange","onClick","Component","Sites","userQuery","getItem","query","loading","sites","me","removeItem","map","site","title","url","PrisingA","Routes","exact","path","render","to","httpLink","createHttpLink","uri","authLink","setContext","_","headers","Authorization","client","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f4c114f3.chunk.js","sourcesContent":["export const AUTH_TOKEN = \"auth-token\";\nexport const USER_ID = \"user-id\";\n","import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport { gql } from \"apollo-boost\";\nimport { AUTH_TOKEN, USER_ID } from \"./constants\";\n\nconst loginMutation = gql`\n  mutation($input: UsersPermissionsLoginInput!) {\n    login(input: $input) {\n      jwt\n      user {\n        username\n        id\n        email\n        confirmed\n      }\n    }\n  }\n`;\n\nclass Login extends Component {\n  state = {\n    input: {\n      identifier: \"\",\n      password: \"\",\n    },\n  };\n  _confirm = async (data) => {\n    const { jwt, user } = data.login;\n    this._saveUserData(jwt, user);\n    this.props.history.push(`/sites`);\n  };\n  _saveUserData = async (token, user, username) => {\n    localStorage.setItem(AUTH_TOKEN, token);\n    localStorage.setItem(USER_ID, user.id);\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      input: {\n        ...this.state.input,\n        [name]: value,\n      },\n    });\n  };\n  render() {\n    const { identifier, password } = this.state.input;\n    return (\n      <Mutation\n        mutation={loginMutation}\n        variables={this.state}\n        onCompleted={(data) => this._confirm(data)}\n        onError={() => alert(\"invalid username or password\")}\n      >\n        {(mutate) => (\n          <div className={\"form\"}>\n            <div className={\"auth\"}>\n              <div className={\"identifier\"}>\n                <input\n                  type={\"text\"}\n                  name={\"identifier\"}\n                  placeholder={\"identifier\"}\n                  value={identifier}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className={\"password\"}>\n                <input\n                  type={\"password\"}\n                  name={\"password\"}\n                  placeholder={\"password\"}\n                  value={password}\n                  onChange={this.handleChange}\n                />\n              </div>\n              <div className={\"login\"}>\n                <button onClick={mutate}>Login</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\nimport { gql } from \"apollo-boost\";\nimport { Query } from \"react-apollo\";\nimport { USER_ID, AUTH_TOKEN } from \"./constants\";\n\nclass Sites extends Component {\n  render() {\n    const userQuery = gql`\n  query {\n  me{\n  username\n  }\n  user(id:${localStorage.getItem(USER_ID)}){\n    sites {\n      title\n      url\n    }\n    }\n  }\n`;\n    return (\n      <Query query={userQuery}>\n        {({ data, loading }) => {\n          if (loading) {\n            return <div>loading...</div>;\n          }\n\n          if (!data) {\n            return <div>data is undefined</div>;\n          }\n\n          if (!data.user.sites) {\n            return <div>received no sites</div>;\n          }\n\n          return (\n            <div>\n              <nav>\n                <div className={\"username\"}> {data.me.username}</div>\n                <button\n                  onClick={() => {\n                    localStorage.removeItem(AUTH_TOKEN);\n                    localStorage.removeItem(USER_ID);\n                    this.props.history.push(`/sign-in`);\n                  }}\n                >\n                  Log out\n                </button>\n              </nav>\n              <div className={\"sites\"}>\n                <div className={\"title\"}>Sites</div>\n                {data.user.sites.map((site) => (\n                  <div className={\"site\"}>\n                    <div className={\"site-name\"}>{site.title}</div>\n                    <div className={\"site-url\"}>{site.url}</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default Sites;\n","import React, { Component } from \"react\";\nimport { AUTH_TOKEN, USER_ID } from \"./constants\";\n\nclass PrisingA extends Component {\n  render() {\n    return (\n      <div className={\"form\"}>\n        <div className={\"auth\"}>\n          <div className={\"logout\"}>\n            <button\n              onClick={() => {\n                localStorage.removeItem(AUTH_TOKEN);\n                localStorage.removeItem(USER_ID);\n                this.props.history.push(`/sign-in`);\n              }}\n            >\n              Log out\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PrisingA;\n","import React, { Component } from \"react\";\nimport Login from \"./Login\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Sites from \"./Sites\";\nimport { USER_ID } from \"./constants\";\nimport PrisingA from \"./PrisingA\";\n\nclass Routes extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() =>\n              localStorage.getItem(USER_ID) ? (\n                <Redirect to={\"/sites\"} />\n              ) : (\n                <Redirect to={\"/sign-in\"} />\n              )\n            }\n          />\n          <Route\n            exact\n            path={\"/sign-in\"}\n            render={(props) =>\n              localStorage.getItem(USER_ID) ? (\n                <Redirect to={\"/sites\"} />\n              ) : (\n                <Login {...props} />\n              )\n            }\n          />\n          <Route\n            exact\n            path={\"/sites\"}\n            render={(props) => {\n              if (localStorage.getItem(USER_ID) === \"2\") {\n                return <Redirect to={\"/pricing-a\"} />;\n              }\n              if (!localStorage.getItem(USER_ID)) {\n                return <Redirect to={\"/sign-in\"} />;\n              }\n              return <Sites {...props} />;\n            }}\n          />\n          <Route\n            exact\n            path={\"/pricing-a\"}\n            render={(props) => {\n              if (!localStorage.getItem(USER_ID)) {\n                return <Redirect to={\"/sign-in\"} />;\n              }\n              return <PrisingA {...props} />;\n            }}\n          />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Routes from \"./Routes\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { AUTH_TOKEN } from \"./constants\";\nimport { setContext } from \"apollo-link-context\";\nimport \"./index.css\";\n\nconst httpLink = createHttpLink({\n  uri: \"http://167.71.41.6:1337/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\n// 3\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n// 4\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Routes client={client} />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}